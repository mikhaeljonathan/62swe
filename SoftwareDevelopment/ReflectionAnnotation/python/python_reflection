class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def greet(self):
        print(f"Hello, my name is {self.name} and I am {self.age} years old.")

person = Person("Alice", 30)

print(type(person))  # <class '__main__.Person'>
print(isinstance(person, Person))  # True
print(dir(person))  # ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'age', 'greet', 'name']
print(getattr(person, 'name'))  # Alice
setattr(person, 'name', 'Bob')
print(person.name)  # Bob
print(hasattr(person, 'age'))  # True

import inspect
print(inspect.getmembers(person))
# Output: [('__class__', <class '__main__.Person'>), ('__delattr__', <method-wrapper '__delattr__' of Person object at 0x7f9e1c6cbe50>), ... , ('greet', <bound method Person.greet of <__main__.Person object at 0x7f9e1c6cbe50>>)]

